%h2.page-header= t('.title')
.page-header-bottom
%table.table.table-bordered
  %thead
    %tr
      %th= ProposalObject.human_attribute_name :barclamp
      %th= ProposalObject.human_attribute_name :status
      %th= ProposalObject.human_attribute_name :name
      %th= ProposalObject.human_attribute_name :description

  %tbody
    - @proposals.sort_by{|n| "#{n.barclamp}/#{n.name}" }.each do |proposal|
      %tr{ :class => ["proposal", cycle(:odd, :even)], :id => "#{proposal.barclamp}_#{proposal.name}" }
        %td= link_to proposal.barclamp.titlecase, barclamp_path(proposal.barclamp)
        %td.status
          .led{:class => proposal.status, :title => proposal.status}
        %td= link_to proposal.name, proposal_path(proposal.id)
        %td= proposal.description
        -# %td.action= link_to t('edit'), edit_proposal_path(proposal)
        -# %td.action= link_to t('destroy'), proposal, :confirm => t('are_you_sure'), :method => :delete


:javascript
  function update() {
    $.ajaxSetup({ timeout: 3000 })
    $.getJSON('#{status_proposals_path}', function(data) {

      // If proposal count has changed, re-render the page
      var current_proposals = $('.proposal').length;
      if(data['count'] != current_proposals) {
        location.reload();
      }

      // Update proposals
      $.each(data['proposals'], function(key,val) {
        var td = $('#'+key+' td');
        var led = td.children('.led');
        if(!led.hasClass(val)){
          led.attr('class', 'led '+val);
          led.attr('title', val)
          td.effect("highlight", {color: '#eeeeee'}, 2000);
        }
      });

    });
  }

