- state = @deployment.state

%p{:style=>'float:right'}
  = render :partial => 'buttons', :locals => { :state=>state, :snapshot=>@deployment.head }
%h1
  - case state
    - when NodeRole::TODO 
      = t '.committed'
    - when NodeRole::PROPOSED
      = t '.proposed'
    - when NodeRole::ACTIVE
      = t '.active'
    - else
      = t 'error'
  = @deployment.name

%table.plain
  %tr
    %td
      .led{:class => NodeRole::STATES[state || NodeRole::ERROR], :title=>NodeRole.state_name(state)}
    %td= @deployment.description

= form_for :deployment, :'data-remote' => true, :url => deployment_roles_path(:deployment_id=>@deployment.id), :html => { :method=>:post, :'data-type' => 'html',  :class => "formtastic" } do |f|
  %p{:style=>'float:right'}
    = f.collection_select :roles, @deployment.available_roles, :id, :name
    %input.button{:type => "submit", :name => "add", :value => t('.add_role')}
  %h2= t '.roles'

= render :partial => 'roles/index', :locals => { :list => @deployment.head.roles, :jig_name => nil }

%h2= t '.snapshots'
= render :partial => 'snapshots/index', :locals => { :list=>@deployment.snapshots }