- s = 'model.attribs.node'
.led{:id => "head_#{@node.id}", :class=>"led #{@node.status}", :title=>t(@node.state, :scope=>:state, :default=>@node.state), :style=>'float:left;'}
%h1{:title=>@node.description}= "#{@node.alias} (#{link_to t('edit'), edit_node_path(@node.id)})".html_safe

%ul.buttons
  - if @node.bmc_set?
    %li= link_to "Reboot", "/ipmi/v2/nodes/#{@node.id}/reboot", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure') 
    %li= link_to "Shutdown", "/ipmi/v2/nodes/#{@node.id}/shutdown", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Power On", "/ipmi/v2/nodes/#{@node.id}/poweron", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Identify", "/ipmi/v2/nodes/#{@node.id}/identify", :method=>:put, :class => 'button', :'data-remote' => true

.column_50.first
  %dl
    = dl_item(t('name', :scope=>s), @node.name)
    = dl_item(t('state', :scope=>s), t(@node.state, :scope=>'state', :default=>@node.state), {:class=>"node_state", :title=>"#{t('raw')}: #{@node.state}"})
    = dl_item(t('uptime', :scope=>s), (@node.ready? ? @node.attrib_uptime : t('na', :scope=>s)))
    - if @node.attrib_switch_unit.nil?
      = dl_item(t('switch_name_port', :scope=>s), "#{@node.attrib_switch_name || t('unknown') } / #{@node.attrib_switch_port || t('unknown')}")
    - else
      = dl_item(t('switch_name_unit_port', :scope=>s), link_to("#{@node.attrib_switch_name || t('unknown') } / #{@node.attrib_switch_unit || ''} / #{@node.attrib_switch_port || t('unknown')}", switch_path(:node=>@node.id)))    
    = dl_item(t('mac', :scope=>s), @node.attrib_mac || t('unknown'))
    = dl_item(t('allocated', :scope=>s), (@node.allocated? ? t('.active') : t('.inactive')))

.column_50.last
  %dl
    = dl_item(t('description', :scope=>s), @node.description || (t :not_set))
    = dl_item(t('hardware', :scope=>s), @node.attrib_hardware)
    = dl_item(t('cpu', :scope=>s), @node.attrib_cpu)
    = dl_item(t('memory', :scope=>s), format_memory(@node.attrib_memory))
    = dl_item(t('number_of_drives', :scope=>s), "#{@node.attrib_number_of_drives}, #{t('.raid')}: #{t('raid.'+(@node.attrib_raid_set || 'not_set'))}")
    = dl_item(t('asset_tag', :scope=>s), @node.attrib_asset_tag)

.clear

%dl.networks
  ='pending' # dl_item(t('ip', :scope=>s), "<ul class='plain'>#{ip_addresses(@network)}</ul>", {:escape_html=>false})

%dl.links
  %dt
    = t('.links')
  %dd
    = t('.bmc')  #link_to t('.bmc'), "https://#{@node.attrib_bmc_address rescue 'none'}", :target => '_blank'
    - unless @node.links.nil?
      - @node.links.each do |link|
        = link_to link.name, link.url, :target => '_blank', :title=>link.description
  
%dl.barclamps
  ="pending" # dl_item(t('barclamps':scope=>s), barclamps_list(@node.roles), {:escape_html=>false})

%dl.roles
  ="pending" #dl_item(t('roles':scope=>s), roles_list(@node.roles), {:escape_html=>false})

%ul.buttons
  - unless @node.is_admin?
    %li= link_to "Reboot", "/ipmi/v2/nodes/#{@node.id}/reboot", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure') 
    %li= link_to "Shutdown", "/ipmi/v2/nodes/#{@node.id}/shutdown", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Power On", "/ipmi/v2/nodes/#{@node.id}/poweron", :method=>:put, :class => 'button', :'data-remote' => true, :'data-confirm' => t('are_you_sure')
    %li= link_to "Identify", "/ipmi/v2/nodes/#{@node.id}/identify", :method=>:put, :class => 'button', :'data-remote' => true
