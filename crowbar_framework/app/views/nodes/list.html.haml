%p{:style => 'float:right'}
  -if params[:allocated].nil?
    = link_to t('.unallocated'), nodes_list_path(:allocated=>'yes'), :class => 'button'
    %h1= t('.title_all')
  -else
    = link_to t('.all'), nodes_list_path, :class => 'button'
    %h1= t('.title_unallocated')

- # filter to only show unallocated nodes, with an option to display all
- form_for :node, :'data-remote' => true, :url => '/nodes/list', :html => { :'data-type' => 'html',  :id => 'update_nodes_list', :class => "formtastic" } do |f|
  -if !params[:allocated].nil?
    = hidden_field_tag "allocated", 'yes'
  %table.data.box
    %thead
      %tr
        %th= t('.name')
        %th= t('.alias')
        %th= t('.public_name')
        %th= t('.hw_description')
        %th= t('.description')
        %th= t('.group')
        -if @options[:show].include? :bios
          %th= t('.bios')
        -if @options[:show].include? :raid
          %th= t('.raid')
        %th= t('.target_platform')
        %th= t('.license_key')
        %th.center 
          Allocate? 
          = check_box_tag 'all', 'all', false, {:onChange=>"check_all()"}
    %tbody
      - if @nodes.count > 0
        - @nodes.sort_by{|handle, n| n.name }.each do |handle, node|
          %tr.node{ :class => cycle(:odd, :even, :name => "nodes"), :id => node.handle }
            %td= link_to node.name.split('.')[0], node_path(node.handle), :title=> node.ip
            -unless node.admin?
              %td= text_field_tag "node:#{node.name}:alias".to_sym, "#{node.alias(true)}", :size => 15
              %td= text_field_tag "node:#{node.name}:public_name".to_sym, "#{node.public_name(true)}", :size => 15
              %td= "#{node.hardware}<br/>#{node.memory}<br/>#{node.nics} Nics"
              %td= text_field_tag "node:#{node.name}:description".to_sym, "#{node.description(true)|| ""}", :size => 30
              %td= text_field_tag "node:#{node.name}:group".to_sym, node.group(true), :size => 15
              -if @options[:show].include? :bios
                %td= select_tag "node:#{node.name}:bios".to_sym, options_for_select(option_default(@options[:bios], node.bios_set, 'bios'), node.bios_set)
              -if @options[:show].include? :raid
                %td= select_tag "node:#{node.name}:raid".to_sym, options_for_select(option_default(@options[:raid], node.raid_set, 'raid'), node.raid_set)
              -unless node.allocated
                %td= select_tag "node:#{node.name}:target_platform".to_sym, options_for_select(option_default(@target_platforms, node.target_platform, 'target_platform'), node.target_platform), {:onchange => "showLicense(this)"}
                %td= text_field_tag "node:#{node.name}:license_key".to_sym, node.license_key, :size => 15, :style => CrowbarService.require_license_key?(node.target_platform) ? "display:block" : "display:none"
              -else
                %td= node.pretty_target_platform
                -if CrowbarService.require_license_key?(node.target_platform)
                  %td= node.license_key
                -else
                  %td.center= t 'na'
              %td.center
                -unless node.allocated
                  = check_box_tag("node:#{node.name}:allocate".to_sym, 'checked')
                -else
                  = t 'complete'
            -else
              %td= text_field_tag "node:#{node.name}:alias".to_sym, "#{node.alias(true) || t('.admin')}", :size => 15
              %td= text_field_tag "node:#{node.name}:public_name".to_sym, "#{node.public_name(true)}", :size => 15
              %td= "#{node.hardware}<br/>#{node.memory}<br/>#{node.nics} Nics"
              %td= text_field_tag "node:#{node.name}:description".to_sym, (node.description(true) || ""), :size => 30
              %td= text_field_tag "node:#{node.name}:group".to_sym, node.group, :size => 15
              -if @options[:show].include? :bios
                %td= t 'na'
              -if @options[:show].include? :raid
                %td= t 'na'
              %td= node.pretty_target_platform
              %td.center= t 'na'
              %td.center= t 'na'
      - else
        %tr
          %td{ :colspan=>8 }
            = t 'no_items'
    - if @nodes.count > 0
      %tfoot
        %tr{ :class => cycle(:odd, :even, :name => "nodes")}
          %td.hint{:colspan => 7}
            = t('note')+": "+t('.hint')
          %td.action{:colspan => 1}
            %input.button{:type => "submit", :name => "submit", :value => 'Save'}

.clear

:javascript
  
  // if all the prereqs are met (none are visiblie) then check the box
  // and check to see if that enables/disables other barclamps
  function check_all() {
    var checkbox = $('#all');
    $('input[id^=node]').each ( function(index) {
      if (/allocate$/.test($(this).attr('id')))
        $(this).attr('checked', (checkbox.attr('checked') != undefined) );
    });
  }

  function showLicense(obj)
  {
      var id = obj.id.replace("target_platform","license_key");
      if(obj[obj.selectedIndex].value == 'windows-6.2')
      {
          document.getElementById(id).style.display = 'block';
      }
      else
      {
          document.getElementById(id).style.display = 'none';
      }
  }
  
