= form_for :role, :'data-remote' => true, :url => role_path(@role.id), :html => { :method=>:put, :'data-type' => 'html',  :class => "formtastic" } do |f|

  %div{:style => 'float:right'}
    %input.button{:type => "submit", :name => "save", :value => t('.save')}
  %h1= @role.name

  %dl
    %dt= t '.description' 
    %dd= @role.description

    - unless params.include? :form
      %dt= t '.jig' 
      %dd= link_to @role.jig_name, jig_path(@role.jig_name)
      %dt= t '.barclamp' 
      %dd= link_to @role.barclamp.name, barclamp_path(@role.barclamp.id), :title=>@role.barclamp.description
      - if Rails.env.development?
        %dt= t '.type'
        %dd= "[#{@role.class.to_s}]"
      %dt= t '.flags'
      %dd
        = t '.library' if @role.library 
        = t '.discovery' if @role.discovery
        = t '.implicit' if @role.implicit
        = t '.bootstrap' if @role.bootstrap
        = t '.server' if @role.server

  .clear

  - begin 
    - specific = "barclamp_#{@role.barclamp.name}/node_roles/#{@role.name}"
    - general = "barclamp_#{@role.barclamp.name}/roles/role"
    - template = @role.template 
  - rescue Exception => moderror
    %p= t '.model_error', :error=>moderror.message

  - if params.include? :raw
    = render :partial => 'node_roles/raw', :locals => { :role=>@role, :data => nil, :hide=>true, :template => template }
  - else
    - begin
      = render :partial => specific, :locals  => { :role=>@role, :data => nil, :hide => true, :template => template }
    - rescue Exception => e_outer
      - begin
        = render :partial => general, :locals  => { :role=>@role, :data => nil, :hide => true, :template => template }
      - rescue Exception => e_inner
        - render :partial => 'node_roles/raw', :locals => { :role=>@role, :data => nil, :hide => true, :template => template }
        - if Rails.env.development?
          - if e_inner.message.starts_with? "Missing partial barclamp_#{@role.barclamp.name}" 
            %p= t '.no_overlay', :overlay=>"#{specific} or #{general}"
          - else
            %p
              = t 'error'
              = e_inner.message

  - unless params.include? :form
    %h3= t '.upstream'

    = render :partial => "index", :locals => { :list => @role.parents, :jig_name => nil }
