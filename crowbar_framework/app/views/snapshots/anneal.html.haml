- state = @snapshot.state
- if @snapshot and state == NodeRole::TODO
  %p{:style => 'float:right'}
    = link_to t('.converge'), converge_path(:version=>'v2'), :class => 'button', :"data-method"=>:put
    = link_to t('.anneal'), anneal_path(:version=>'v2', :step=>Rails.env.development?), :class => 'button', :"data-method"=>:put
%table.plane
  %tr
    %td
      .led{:class => NodeRole::STATES[state || NodeRole::ERROR], :title=>NodeRole.state_name(state)}
    %td
      %h1
        = link_to @snapshot.name, snapshot_path(@snapshot.id) if @snapshot
        = t '.title'

= render :partial=>'node_roles/index', :locals => { :list => @list }

%h2= t '.todo'
- todo = NodeRole.peers_by_state(@snapshot, NodeRole::TODO)
= render :partial=>'node_roles/index', :locals => { :list => todo }

%h2= t '.blocked'
- blocked = NodeRole.peers_by_state(@snapshot, NodeRole::BLOCKED)
= render :partial=>'node_roles/index', :locals => { :list => blocked }

.clear

:javascript

  function update() {
    $.ajaxSetup({ timeout: 1000 });
    location.reload();
  }