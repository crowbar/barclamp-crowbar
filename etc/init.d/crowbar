#!/bin/bash
### BEGIN INIT INFO
# Provides:          crowbar-webserver
# Required-Start:    $syslog $network $named
# Should-Start:      xinetd chef-server
# Required-Stop:     $syslog $network $named
# Should-Stop:       xinetd chef-server
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Start the Crowbar Web application
# Description:       Manages the Crowbar Web application
### END INIT INFO

PATH="/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
GEMFILE_LOCK=/opt/dell/crowbar_framework/Gemfile.lock
if [[ -f /etc/redhat-release || -f /etc/centos-release ]]; then
    OS=redhat
elif [[ -d /etc/apt ]]; then
    OS=ubuntu
elif [[ -f /etc/SuSE-release ]]; then
    OS=suse
fi

if [[ -f /etc/crowbar.install.key ]]; then
    read CROWBAR_KEY < /etc/crowbar.install.key
    export CROWBAR_KEY
fi

as_crowbar() (
    cd /opt/dell/crowbar_framework
    sudo -H -u crowbar -- "$@"
)

start(){
    if [[ $OS = suse ]]; then
        # refresh the Gemfile.lock content before starting the server
        # (outdated file can cause problems after any of the required
        # rubygems were updated)
        rm -f $GEMFILE_LOCK
        as_crowbar bundle install --local --quiet
    fi
    as_crowbar bundle exec puma -d -C puma.cfg
    echo "Starting delayed_job NodeRoleRunner queue (10 workers)"
    as_crowbar bundle exec script/delayed_job --queue=NodeRoleRunner -n 10 start

}

stop() {
    as_crowbar bundle exec pumactl -F puma.cfg stop
    as_crowbar bundle exec script/delayed_job stop
}

restart() {
    as_crowbar bundle exec pumactl -F puma.cfg restart
    as_crowbar bundle exec script/delayed_job restart
}

status() {
    as_crowbar bundle exec pumactl -F puma.cfg status && \
        pgrep -f delayed_job
}

mkdir -p /var/run/crowbar && chown crowbar:crowbar /var/run/crowbar

case "$1" in
    start) start;;
    stop) stop;;
    status) status;;
    restart) restart;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac
