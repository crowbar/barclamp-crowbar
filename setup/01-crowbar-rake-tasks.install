#!/bin/bash

## only do this on real installs.
[[  -d /tftpboot/ubuntu_dvd/dell/Version || \
    -d /tftpboot/redhat_dvd/dell/Version || \
    -d /opt/dell/barclamps/crowbar ]] || \
    { echo "Not an admin node, not installing Crowbar"; exit 0; }

set -x

if [[ -f /etc/redhat-release || -f /etc/centos-release ]]; then
    OS=redhat
elif [[ -d /etc/apt ]]; then
    OS=ubuntu
elif [[ -f /etc/SuSE-release ]]; then
    OS=suse
else
    exit 1
fi

case $OS in
    ubuntu)
        dpkg -l crowbar-barclamp-crowbar &>/dev/null || \
        apt-get -y install curl sqlite sqlite3 libsqlite3-dev vim;;
    redhat) yum -y install curl sqlite sqlite-devel vim gcc-c++;;
esac

if ! grep -q '^crowbar:' /etc/passwd; then
    useradd -m /home/crowbar -U \
        -p '$6$afAL.34B$T2WR6zycEe2q3DktVtbH2orOroblhR6uCdo5n3jxLsm47PBm9lwygTbv3AjcmGDnvlh0y83u2yprET8g9/mve.' \
        -s /bin/bash \
        crowbar
fi

cd /opt/dell/crowbar_framework
export RAILS_ENV=production
tasks=("rake assets:precompile"
    "rake railties:install:migrations"
    "rake db:migrate"
    "script/rails generate delayed_job:active_record"
    "rake db:migrate")
for task in "${tasks[@]}"; do
    su -s /bin/bash -c "bundle exec $task" crowbar && continue
    echo "Task $task failed." >&2
    exit 1
done

# Make some auxilliary files that the Crowbar webapp will rely on.
mkdir -p tmp
for lock in queue ip; do
    touch "tmp/$lock.lock"
    chmod 644 "tmp/$lock.lock"
done

cat >config.ru <<EOF
require ::File.expand_path('../config/environment', __FILE__)
run Crowbar::Application
EOF

declare -A puma_cfgs
puma_cfgs["production"]="puma.cfg"
puma_cfgs["development"]="puma-dev.cfg"
puma_cfgs["test"]="puma-test.cfg"

for cfg in "${!puma_cfgs[@]}"; do
    touch "log/$cfg.log"
    chmod 644 "log/$cfg.log"

    cat >"${puma_cfgs[$cfg]}" <<EOF
bind("tcp://0.0.0.0:3000")
pidfile("/var/run/crowbar/crowbar.pid")
rackup("/opt/dell/crowbar_framework/config.ru")
environment("$cfg")
state_path("/var/run/crowbar/puma.state")
EOF
done

if [[ $OS != suse ]]; then
    for i in 3 5 2; do
        [[ -d /etc/rc$i.d ]] || continue
        ln -sf /etc/init.d/crowbar "/etc/rc$i.d/S99crowbar"
    done
else
    chkconfig crowbar on
fi

for d in /var/run/crowbar /opt/dell/crowbar_framework; do
    chown -R crowbar:crowbar "$d"
done

/etc/init.d/crowbar start

printf "Waiting for Crowbar web app to start"
while ! grep -q crowbar <  <(/opt/dell/bin/crowbar users list); do
    printf "."
    sleep 1
done
printf " Done.\n"
